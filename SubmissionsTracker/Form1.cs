using System;
using System.Configuration;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;
using System.Data.SqlClient;
using System.Data.Entity.Core.EntityClient;

namespace SubmissionsTracker
{
    public partial class Form1 : Form
    {
        SubmissionsDbEntitiesContext _context;
        
        public Form1()
        {
            InitializeComponent();
        }

        protected override void OnLoad(EventArgs e)
        {
            base.OnLoad(e);
            this.SubmissionDataGridView.CellValidating += new DataGridViewCellValidatingEventHandler(SubmissionDataGridView_CellValidating);
            this.SubmissionDataGridView.CellEndEdit += new DataGridViewCellEventHandler(SubmissionDataGridView_CellEndEdit);


            _context = new SubmissionsDbEntitiesContext();

            _context.Submissions.Load();
            this.submissionBindingSource.DataSource =
                  _context.Submissions.Local.ToBindingList();

            //Autocomplete for form textboxes
            FormAutocompleteSuggest();

            SetColumnToClickableLinks();

            // Color the header and rows
            this.SubmissionDataGridView.ColumnHeadersDefaultCellStyle.BackColor = ColorTranslator.FromHtml("#91b7bc");
            this.SubmissionDataGridView.EnableHeadersVisualStyles = false;
            this.SubmissionDataGridView.RowsDefaultCellStyle.BackColor = ColorTranslator.FromHtml("#e8dec9");
            this.SubmissionDataGridView.AlternatingRowsDefaultCellStyle.BackColor = Color.Beige;


        }



        private void SetColumnToClickableLinks()
        {
            foreach (DataGridViewRow row in SubmissionDataGridView.Rows)
            {
                DataGridViewLinkCell companyLinkCell = new DataGridViewLinkCell();
                companyLinkCell.Value = row.Cells[11].Value;
                row.Cells[11] = companyLinkCell;

                DataGridViewLinkCell listingLinkCell = new DataGridViewLinkCell();
                listingLinkCell.Value = row.Cells[10].Value;
                row.Cells[10] = listingLinkCell;
            }
        }

        // Make address columns links
        private void dataGridView1_DataBindingComplete(object sender, DataGridViewBindingCompleteEventArgs e)
        {
            foreach (DataGridViewRow row in SubmissionDataGridView.Rows)
            {
                DataGridViewLinkCell linkCell = new DataGridViewLinkCell();
                linkCell.Value = row.Cells[11].Value;
                row.Cells[11] = linkCell;
            }
        }

        // Functionality for links to open browser and go to webpage.
        private void SubmissionDataGridView_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {
            if (SubmissionDataGridView.Columns[SubmissionDataGridView.CurrentCell.ColumnIndex].HeaderText.Contains("Listing Web Address") ||
                SubmissionDataGridView.Columns[SubmissionDataGridView.CurrentCell.ColumnIndex].HeaderText.Contains("Company Web Address"))
            {
                if (!String.IsNullOrWhiteSpace(SubmissionDataGridView.CurrentCell.EditedFormattedValue.ToString()))
                {
                    System.Diagnostics.Process.Start("http://" + SubmissionDataGridView.CurrentCell.EditedFormattedValue);
                }
            }
        }

        // add save button functionality
        private void submissionBindingNavigatorSaveItem_Click(object sender, EventArgs e)
        {
            this.Validate();
            
            // Save the changes to the database.
            this._context.SaveChanges();

            // Refresh the controls to show the values         
            // that were generated by the database.
            this.SubmissionDataGridView.Refresh();
        }


        // Validate that a date is entered
        private void SubmissionDataGridView_CellValidating(object sender, DataGridViewCellValidatingEventArgs e)
        {

            if (_context.Submissions.Any())
            {
                string headerText = SubmissionDataGridView.Columns[e.ColumnIndex].HeaderText;

                // Abort validation if cell is not in the Date Submitted column.
                if (!headerText.Equals("DateSubmitted")) return;

                // Confirm that the cell is not empty.
                if (string.IsNullOrEmpty(e.FormattedValue.ToString()))
                {
                    SubmissionDataGridView.Rows[e.RowIndex].ErrorText =
                        "Date Submitted column must not be empty";
                    e.Cancel = true;
                }
            }

        }

        void SubmissionDataGridView_CellEndEdit(object sender, DataGridViewCellEventArgs e)
        {
            // Clear the row error in case the user presses ESC.   
            SubmissionDataGridView.Rows[e.RowIndex].ErrorText = String.Empty;
        }

        // Add new submission functionality
        private void ButtonAddSubmission_Click(object sender, EventArgs e)
        {
            this.Validate();

            _context = new SubmissionsDbEntitiesContext();
            Submission submission = new Submission();

            submission.DateSubmitted = DateTime.Now;
            submission.Company = TextBoxCompany.Text;
            submission.Position = TextBoxPosition.Text;
            submission.ContactPerson = TextBoxContactPerson.Text;
            submission.Location = TextBoxLocation.Text;
            submission.JobBoard = TextBoxJobBoard.Text;
            submission.JobBoardId = TextBoxJobBoardId.Text;
            submission.SubmittedThrough = TextBoxSubmittedThru.Text;
            submission.ListingWebAddress = TextBoxListingWeb.Text;
            submission.CompanyWebAddress = TextBoxCompanyWeb.Text;
            submission.Notes = TextBoxNotes.Text;

            this._context.Submissions.Add(submission);
            this._context.SaveChanges();

            //refresh gridview
            _context = new SubmissionsDbEntitiesContext();
            BindingSource bs = new BindingSource();
            SubmissionDataGridView.DataSource = null;
            _context.Submissions.Load();
            bs.DataSource = this.submissionBindingSource.DataSource = _context.Submissions.Local.ToBindingList();
            SubmissionDataGridView.DataSource = bs;
            SetColumnToClickableLinks();

            //clear textboxes
            
            foreach (Control c in GroupBoxNewSubmission.Controls)
            {
                if (c is TextBox)
                    ((TextBox)c).Clear();
                
            }
            

        }

        // Autocomplete functionality for textboxes
        private void FormAutocompleteSuggest()
        {
            string entityConString = ConfigurationManager.ConnectionStrings["SubmissionsDbEntitiesContext"].ConnectionString;
            string providerConString = new EntityConnectionStringBuilder(entityConString).ProviderConnectionString;

            using (SqlConnection con = new SqlConnection(providerConString))
            {
                SqlCommand cmd = new SqlCommand("SELECT Company, Position, ContactPerson, Location, JobBoard, SubmittedThrough, CompanyWebAddress FROM Submissions", con);
                con.Open();
                SqlDataReader reader = cmd.ExecuteReader();
                AutoCompleteStringCollection companyCollection = new AutoCompleteStringCollection();
                AutoCompleteStringCollection positionCollection = new AutoCompleteStringCollection();
                AutoCompleteStringCollection contactCollection = new AutoCompleteStringCollection();
                AutoCompleteStringCollection locationCollection = new AutoCompleteStringCollection();
                AutoCompleteStringCollection jobBoardCollection = new AutoCompleteStringCollection();
                AutoCompleteStringCollection submittedThroughCollection = new AutoCompleteStringCollection();
                AutoCompleteStringCollection companyWebAddressCollection = new AutoCompleteStringCollection();
                
                while (reader.Read())
                {
                    companyCollection.Add(reader.GetString(0));
                    positionCollection.Add(reader.GetString(1));
                    contactCollection.Add(reader.GetString(2));
                    locationCollection.Add(reader.GetString(3));
                    jobBoardCollection.Add(reader.GetString(4));
                    submittedThroughCollection.Add(reader.GetString(5));
                    companyWebAddressCollection.Add(reader.GetString(6));                    
                }
                TextBoxCompany.AutoCompleteCustomSource = companyCollection;
                TextBoxPosition.AutoCompleteCustomSource = positionCollection;
                TextBoxContactPerson.AutoCompleteCustomSource = contactCollection;
                TextBoxLocation.AutoCompleteCustomSource = locationCollection;
                TextBoxJobBoard.AutoCompleteCustomSource = jobBoardCollection;
                TextBoxSubmittedThru.AutoCompleteCustomSource = submittedThroughCollection;
                TextBoxCompanyWeb.AutoCompleteCustomSource = companyWebAddressCollection;
                con.Close();
            }
        }

        protected override void OnClosing(CancelEventArgs e)
        {
            base.OnClosing(e);

        }
    }
}
